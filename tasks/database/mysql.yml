---

- name: create my.cnf file with password credentials
  ansible.builtin.template:
    src: my.cnf.j2
    dest: /etc/icingaweb2/.my.cnf
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0660
  no_log: true

- name: find database upgrades directory
  ansible.builtin.find:
    paths: "{{ icingaweb_install_dir }}"
    file_type: directory
    patterns:
        - "mysql-upgrades"
    recurse: true
  register: found_directory

- name: find database schema script
  ansible.builtin.find:
    paths: "{{ icingaweb_install_dir }}"
    file_type: file
    patterns:
        - "mysql.schema.sql"
    recurse: true
  register: found_schema

- name: define database upgrade directory
  ansible.builtin.set_fact:
    icingaweb_upgrade_directory: "{{
        found_directory.files |
        sort(attribute='path', reverse=True) |
        map(attribute='path') | list | first }}"
  when:
    - found_directory.files is defined
    - found_directory.files | count > 0

- name: define database schema file
  ansible.builtin.set_fact:
    icingaweb2_database_schema: "{{
        found_schema.files |
        sort(attribute='path', reverse=True) |
        map(attribute='path') | list | first }}"
  when:
    - found_schema.files is defined
    - found_schema.files | count > 0

- name: ensure database schema for icingaweb is created
  mysql_schema:
    login_host: "{{ icingaweb_auth_backend.database.host }}"
    login_user: "{{ icingaweb_auth_backend.database.username }}"
    login_password: "{{ icingaweb_auth_backend.database.password }}"
    table_schema: "{{ icingaweb_auth_backend.database.dbname }}"
  # no_log: true
  register: mysql_icingaweb2_schema
  when:
    - icingaweb_auth_backend is defined
    - icingaweb_auth_backend.database is defined
    - icingaweb_auth_backend.database.host is defined
    - icingaweb_auth_backend.database.username is defined
    - icingaweb_auth_backend.database.password is defined
    - icingaweb_auth_backend.database.dbname is defined

- name: database schema
  when:
    - mysql_icingaweb2_schema is defined
    - mysql_icingaweb2_schema.exists is defined
    - not mysql_icingaweb2_schema.exists
  block:
    - name: import database schema
      community.mysql.mysql_db:
        state: import
        login_host: "{{ icingaweb_auth_backend.database.host }}"
        login_user: "{{ icingaweb_auth_backend.database.username }}"
        login_password: "{{ icingaweb_auth_backend.database.password }}"
        config_file: ''
        name: "{{ icingaweb_auth_backend.database.dbname }}"
        target: "{{ icingaweb2_database_schema }}"
      # no_log: true
      register: icingaweb2_database_schema

    - name: error
      ansible.builtin.fail:
        msg:
          - "ERROR: {{ icingaweb2_database_schema }}"
      when:
        - icingaweb2_database_schema is defined
        - icingaweb2_database_schema.failed is defined
        - icingaweb2_database_schema.failed

- name: update database version information
  icingaweb_database_update:
    database_login_host: "{{ icingaweb_auth_backend.database.host }}"
    database_name: "{{ icingaweb_auth_backend.database.dbname }}"
    database_config_file: /etc/icingaweb2/.my.cnf
    icingaweb_version: "{{ icingaweb_version }}"
    icingaweb_upgrade_directory: "{{ icingaweb_upgrade_directory }}"
  register: _icingaweb_database_update

- name: output
  ansible.builtin.debug:
    msg: "{{ _icingaweb_database_update }}"

...
