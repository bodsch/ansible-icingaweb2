---

- name: create my.cnf file with password credentials
  template:
    src: my.cnf.j2
    dest: /etc/icingaweb2/.my.cnf
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0660
  no_log: true

- name: copy dbversion statement
  copy:
    src: "dbversion.sql"
    dest: "/etc/icingaweb2/updates/mysql.dbversion.sql"
    mode: 0660

- name: create insert dbversion statement
  template:
    src: "create_dbversion.sql.j2"
    dest: "/etc/icingaweb2/updates/mysql.dbversion_{{ icingaweb_version }}.sql"
    mode: 0660

- name: create database upgrade script
  template:
    src: database-upgrade.sh.j2
    dest: /usr/local/bin/icingaweb-database-upgrade.sh
    mode: 0750

- name: ensure table_schema is created
  mysql_schema:
    login_host: "{{ icingaweb_auth_backend.database.host }}"
    login_user: "{{ icingaweb_auth_backend.database.username }}"
    login_password: "{{ icingaweb_auth_backend.database.password }}"
    table_schema: "{{ icingaweb_auth_backend.database.dbname }}"
  no_log: true
  register: mysql_icingaweb2_schema
  when:
    - icingaweb_auth_backend is defined
    - icingaweb_auth_backend.database is defined
    - icingaweb_auth_backend.database.host is defined
    - icingaweb_auth_backend.database.username is defined
    - icingaweb_auth_backend.database.password is defined
    - icingaweb_auth_backend.database.dbname is defined

- block:
    - name: import database schema
      mysql_db:
        state: import
        login_host: "{{ icingaweb_auth_backend.database.host }}"
        login_user: "{{ icingaweb_auth_backend.database.username }}"
        login_password: "{{ icingaweb_auth_backend.database.password }}"
        config_file: ''
        name: "{{ icingaweb_auth_backend.database.dbname }}"
        target: '{{ icingaweb_install_dir }}/etc/schema/mysql.schema.sql'
      no_log: true
      register: icingaweb2_database_schema

    - name: error
      fail:
        msg:
          - "ERROR: {{ icingaweb2_database_schema }}"
      when:
        - icingaweb2_database_schema is defined
        - icingaweb2_database_schema.failed is defined
        - icingaweb2_database_schema.failed
  when:
    - mysql_icingaweb2_schema is defined
    - mysql_icingaweb2_schema.exists is defined
    - not mysql_icingaweb2_schema.exists

- name: ensure icingaweb_dbversion is created
  mysql_schema:
    login_host: "{{ icingaweb_auth_backend.database.host }}"
    login_user: "{{ icingaweb_auth_backend.database.username }}"
    login_password: "{{ icingaweb_auth_backend.database.password }}"
    table_schema: "{{ icingaweb_auth_backend.database.dbname }}"
    table_name: icingaweb_dbversion
  no_log: true
  register: mysql_icingaweb_dbversion

- name: import dbversion schema
  mysql_db:
    state: import
    login_host: "{{ icingaweb_auth_backend.database.host }}"
    login_user: "{{ icingaweb_auth_backend.database.username }}"
    login_password: "{{ icingaweb_auth_backend.database.password }}"
    config_file: ''
    name: "{{ icingaweb_auth_backend.database.dbname }}"
    target: '/etc/icingaweb2/updates/mysql.dbversion.sql'
  no_log: true
  register: icingaweb2_dbversion_schema
  when:
    - mysql_icingaweb_dbversion is defined
    - mysql_icingaweb_dbversion.exists is defined
    - not mysql_icingaweb_dbversion.exists

- name: update database schema  # noqa 'command-instead-of-shell'
  command:
    cmd: /usr/local/bin/icingaweb-database-upgrade.sh
  changed_when: false

- name: update database version information
  mysql_db:
    state: import
    login_host: "{{ icingaweb_auth_backend.database.host }}"
    login_user: "{{ icingaweb_auth_backend.database.username }}"
    login_password: "{{ icingaweb_auth_backend.database.password }}"
    config_file: ''
    name: "{{ icingaweb_auth_backend.database.dbname }}"
    target: '/etc/icingaweb2/updates/mysql.dbversion_{{ icingaweb_version }}.sql'

...
