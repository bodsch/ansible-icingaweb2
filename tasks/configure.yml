---

- name: create /etc/icingaweb2 directory
  file:
    name: /etc/icingaweb2
    state: directory
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0750

- name: create /etc/icingaweb2/updates directory
  file:
    name: /etc/icingaweb2/updates
    state: directory
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0750

- name: install database
  include_tasks: database/mysql.yml

- name: create modules directories
  file:
    name: '{{ item }}'
    state: directory
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0750
  loop:
    - /etc/icingaweb2/modules
    - /etc/icingaweb2/enabledModules

- name: create log directory
  file:
    name: '{{ item }}'
    state: directory
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0775
  loop:
    - /var/log/icingaweb2

- name: create dashboard directory
  file:
    name: '{{ item }}'
    state: directory
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0750
  loop:
    - /etc/icingaweb2/dashboards

- name: create configurations
  template:
    src: "{{ item }}.j2"
    dest: "/etc/icingaweb2/{{ item }}"
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0666
  loop:
    - resources.ini
    - config.ini
    - authentication.ini
    - groups.ini
    - roles.ini

- name: ensure rights for config.ini
  file:
    path: /etc/icingaweb2/config.ini
    group: "{{ icingaweb_group }}"
    mode: 0666

- name: ensure module directory exists
  file:
    name: '/etc/icingaweb2/modules/{{ item }}'
    state: directory
    group: "{{ icingaweb_group }}"
    mode: 0770
  loop:
    - monitoring

- name: disable icingaweb modules
  file:
    state: absent
    path: "/etc/icingaweb2/enabledModules/{{ item }}"
  loop:
    '{{ icingaweb_modules_disabled }}'
  loop_control:
    label: "  module: {{ item }}"

- name: enable icingaweb modules
  file:
    state: link
    src: '{{ icingaweb_install_dir }}/modules/{{ item }}'
    dest: '/etc/icingaweb2/enabledModules/{{ item }}'
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0750
    force: true
  loop:
    '{{ icingaweb_modules_enabled | list }}'
  loop_control:
    label: "  module: {{ item }}"

- name: create monitoring modules configuration
  template:
    src: modules/monitoring/{{ item }}.ini.j2
    dest: /etc/icingaweb2/modules/monitoring/{{ item }}.ini
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0666
  loop:
    - config
    - backends
    - commandtransports

# userhandling in database
- name: import icingaweb users into database
  become: true
  icingaweb_database_user:
    state: "{{ item.state | default('present') }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
    active: "{{ item.active | default(omit) }}"
    preferences: "{{ item.preferences | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
    database_login_host: "{{ icingaweb_auth_backend.database.host }}"
    database_name: "{{ icingaweb_auth_backend.database.dbname }}"
    database_config_file: /etc/icingaweb2/.my.cnf
  no_log: true
  register: import_icingaweb2_users
  loop:
    "{{ icingaweb_users }}"
  loop_control:
    label: "username: {{ item.username }}, active: {{ item.active | default(omit) }}, state: {{ item.state | default('present') }}"
  when:
    - icingaweb_users is defined
    - icingaweb_users | count != 0
    - icingaweb_auth_backend is defined
    - icingaweb_auth_backend.database is defined
    - icingaweb_auth_backend.database.host is defined
    - icingaweb_auth_backend.database.dbname is defined

# - name: import icingaweb groups into database
#   become: true
#   icingaweb_database_group:
#     state: "{{ item.state | default('present') }}"
#     groupname: "{{ item.groupname }}"
#     parent: "{{ item.parent | default(omit)}}"
#     members: "{{ item.members | default(omit) }}"
#     force: "{{ item.force | default(omit) }}"
#     database_login_host: "{{ icingaweb_auth_backend.database.host }}"
#     database_name: "{{ icingaweb_auth_backend.database.dbname }}"
#     database_config_file: /etc/icingaweb2/.my.cnf
#   # no_log: true
#   # register: import_icingaweb2_users
#   loop:
#     "{{ icingaweb_group_membership }}"
#   loop_control:
#     label: "groupname: {{ item.groupname }}, state: {{ item.state | default('present') }}"
#   when:
#     - icingaweb_group_membership is defined
#     - icingaweb_group_membership | count != 0
#     - icingaweb_auth_backend is defined
#     - icingaweb_auth_backend.database is defined
#     - icingaweb_auth_backend.database.host is defined
#     - icingaweb_auth_backend.database.dbname is defined

- name: error
  fail:
    msg:
      - "ERROR: {{ import_icingaweb2_users }}"
  when:
    - import_icingaweb2_users is defined
    - import_icingaweb2_users.failed is defined
    - import_icingaweb2_users.failed

- name: change ownership of /etc/icingaweb2 directory
  file:
    name: /etc/icingaweb2
    state: directory
    owner: "{{ icingaweb_user }}"
    group: "{{ icingaweb_group }}"
    mode: 0750
    # recurse: true

...
