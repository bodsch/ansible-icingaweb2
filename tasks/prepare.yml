---

# TODO
# drop python2 support!
# add assert

# - name: assert python version
#   assert:
#     that: ansible_python.version.major != 2
#     msg: "Sorry, we don't support python 2 anymore!"

- name: include OS specific configuration
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yaml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yaml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yaml"
        # eg. redhat / debian
        - "{{ ansible_os_family | lower }}.yaml"
        - default.yaml
      skip: true

- block:
    - name: make sure python3-apt is installed (only debian based)
      package:
        name:
          - python3-apt
        state: present

    - name: clean apt cache
      command: apt-get clean
      args:
        warn: false
      register: apt_clean
      changed_when: apt_clean.rc != 0
      failed_when: apt_clean.rc != 0
  when:
    - ansible_os_family | lower == 'debian'

- name: create local temp directory
  become: false
  delegate_to: 127.0.0.1
  file:
    path: "{{ icingaweb_local_tmp_directory }}"
    state: directory
    mode: 0755

- name: get version of installed php
  package_version:
    package_name: "php"
  register: package_version

- name: define php version
  set_fact:
    php_version: "{{ package_version.version }}"
    php_package_version: "{{ package_version.version_compressed }}"
    php_major_version: "{{ package_version.version[0:1] }}"
  when:
    - package_version is defined
    - package_version.version is defined
    - package_version.version_compressed is defined

- name: assert php_version
  assert:
    that:
      - php_version is defined
      - php_version is version_compare('7.0', '>=')
      - php_version is version_compare('8', '<')
    msg: "This role only works with PHP >= 7.0 and < 8.x .. found: {{ php_version }}"

- name: arch specific
  block:
    - name: detect installed php binary
      stat:
        path: /usr/sbin/php
        get_checksum: false
      register: _php_binary
      ignore_errors: true

    - name: create unified link to php binary
      file:
        src: "/usr/sbin/php{{ php_major_version }}"
        dest: /usr/sbin/php
        state: link
        force: true
      when:
        - _php_binary is defined
        - _php_binary.stat is defined
        - _php_binary.stat.exists is defined
        - not _php_binary.stat.exists
  when:
    - ansible_distribution | lower == 'archlinux'

# - name: handle php8 for archlinux
#   block:
#     - name: undefine php_major_version to define correct php_fpm_daemon
#       set_fact:
#         php_major_version: ""
#
#     - name: re-include OS specific configuration
#       include_vars: "{{ lookup('first_found', params) }}"
#       vars:
#         params:
#           paths:
#             - "vars"
#           files:
#             # eg. debian-10 / ubuntu-20 / centos-8 / oraclelinux-8
#             - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yaml"
#             # eg. archlinux-systemd / archlinux-openrc
#             - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yaml"
#             # eg. debian / ubuntu / centos / oraclelinux
#             - "{{ ansible_distribution | lower }}.yaml"
#             # eg. redhat / debian
#             - "{{ ansible_os_family | lower }}.yaml"
#             - default.yaml
#           skip: true
#   when:
#     - ansible_distribution | lower == 'archlinux'
#     - php_major_version | int == 8

- name: merge dependencies between defaults and custom
  set_fact:
    icingaweb_dependencies: "{{ icingaweb_dependencies + icingaweb_packages }}"

- name: get database package name
  package_version:
    package_name: "{{ _icingaweb_package_mariadb_clients }}"
    state: installed
  register: package_version

- name: remove mariadb-client-core from dependency list if it already installed
  set_fact:
    icingaweb_dependencies: "{{ icingaweb_dependencies | reject('search', 'default-mysql-client-core') | list }}"
  when:
    - package_version.version is defined

- name: merge dependencies between defaults and custom for enabled icingaweb modules
  set_fact:
    icingaweb_modules_enabled: "{{ icingaweb_defaults_modules_enabled + icingaweb_modules_enabled }}"

- name: merge icingaweb_groups configuration between defaults and custom
  set_fact:
    icingaweb_groups: "{{ icingaweb_defaults_groups |
      combine( icingaweb_groups, recursive=True ) }}"

- name: merge icingaweb_authentication configuration between defaults and custom
  set_fact:
    icingaweb_authentication: "{{ icingaweb_defaults_authentication |
      combine( icingaweb_authentication, recursive=True ) }}"

- name: merge icingaweb_resources configuration between defaults and custom
  set_fact:
    icingaweb_resources: "{{ icingaweb_defaults_resources |
      combine( icingaweb_resources, recursive=True ) }}"

- name: merge icingaweb_icingadb configuration between defaults and custom
  set_fact:
    icingaweb_icingadb: "{{ icingaweb_defaults_icingadb |
      combine( icingaweb_icingadb, recursive=True ) }}"

- name: merge icingaweb_php_daemon configuration between defaults and custom
  set_fact:
    icingaweb_php_daemon: "{{ icingaweb_defaults_php_daemon |
      combine( icingaweb_php_daemon, recursive=True ) }}"

- name: install requirements
  package:
    name: "{{ icingaweb_dependencies }}"
    state: present

- block:
    - name: "find primary group for user '{{ icingaweb_user }}'"
      become: true
      getent:
        database: group
        key: "{{ icingaweb_user }}"
        split: ':'

    - name: "set icingaweb_group '{{ getent_group | list | first }}'"
      set_fact:
        icingaweb_group: "{{ getent_group | list | first }}"
      when:
        - getent_group is defined
  when:
    - not icingaweb_group is defined or icingaweb_group | length > 0
...
